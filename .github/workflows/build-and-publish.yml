name: Build & Publish

on:
  push:
  pull_request:
    
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Fetch all history for all tags and branches
      if: github.ref == 'refs/heads/main'
      run: |
        git fetch --unshallow --prune

    - name: Install GitVersion
      if: github.ref == 'refs/heads/main'
      uses: gittools/actions/gitversion/setup@v0.9.10
      with:
        versionSpec: '5.x'
        includePrerelease: false
  
    - name: Determine Version (GitVersion)
      if: github.ref == 'refs/heads/main'
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.10
      with:
        useConfigFile: true
        configFilePath: 'GitVersion.yml'
        additionalArguments: '-ensureassemblyinfo'

    - name: Display Version
      if: github.ref == 'refs/heads/main'
      shell: powershell
      run: |
        Write-Output "==============================================================================================================================================="
        Write-Output "Version : ${{ steps.gitversion.outputs.MajorMinorPatch }}"
        Write-Output "==============================================================================================================================================="

    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x

    - name: Patch BuildDateAttribute
      if: github.ref == 'refs/heads/main'
      shell: powershell
      run: |
        Write-Output "==============================================================================================================================================="
        Write-Output "Pre build. Patching BuildDate Attribute..."
        Write-Output "==============================================================================================================================================="
        $buildDateAttribute = [DateTime]::UtcNow.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")
        Write-Output "Using: '$buildDateAttribute'"
        $dir = "./src/EM.HostsManager.App"
        Write-Output "Currently in: '$dir'"
        $fileLocation = Join-Path $dir -ChildPath "Program.BuildDate.cs" 
        $placeHolder = "BUILD-DATE-ATTRIBUTE"
        (get-content $fileLocation) | foreach-object {$_ -replace $placeHolder, $buildDateAttribute} | set-content $fileLocation
        Write-Output "BuildDateAttribute written..."
        Write-Output "==============================================================================================================================================="

    - name: Patch CommitIdAttribute
      if: github.ref == 'refs/heads/main'
      shell: powershell
      run: |
        Write-Output "==============================================================================================================================================="
        Write-Output "Pre build. Patching CommitId Attribute..."
        Write-Output "==============================================================================================================================================="
        $commitIdAttribute = git log --format="%H" -n 1
        Write-Output "Using: '$commitIdAttribute'"
        $dir = "./src/EM.HostsManager.App"
        Write-Output "Currently in: '$dir'"
        $fileLocation = Join-Path $dir -ChildPath "Program.CommitId.cs" 
        $placeHolder = "COMMIT-ID-ATTRIBUTE"
        (get-content $fileLocation) | foreach-object {$_ -replace $placeHolder, $commitIdAttribute} | set-content $fileLocation
        Write-Output "CommitIdAttribute written..."
        Write-Output "==============================================================================================================================================="

    - name: Build HostsManager (With Version)
      if: github.ref == 'refs/heads/main'
      run: dotnet build "./src"  --configuration Release -p:Version=${{ steps.gitversion.outputs.MajorMinorPatch }}
    
    - name: Build HostsManager (Check)
      if: github.ref != 'refs/heads/main'
      run: dotnet build "./src"  --configuration Release -p:Version=0.0.0-check
        
    - name: Install Inno Setup
      if: github.ref == 'refs/heads/main'
      shell: cmd
      run: |
        choco install innosetup

    - name: Build Installer (Inno Setup)
      if: github.ref == 'refs/heads/main'
      working-directory: "./src/EM.HostsManager.Installer"
      run: |
        iscc.exe EM.HostsManager.Installer.iss /DInstallerVersion=${{ steps.gitversion.outputs.MajorMinorPatch }}

    - name: Upload build artifacts
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: Package
        path: "./src/EM.HostsManager.App/bin/Release/net7.0-windows"
